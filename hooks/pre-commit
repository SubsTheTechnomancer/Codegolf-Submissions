#!/usr/bin/env python

import os
from git import Repo
import matplotlib.pyplot as plt
import urllib
from urllib.request import urlopen
import re

inittext='''
# Codegolf-Submissions
All submissions I have made to [Code Golf](https://code.golf/) in various languages. Note that I do not use encoding tricks in my submissions so my ranking is only concerned with bytes (which will be identical to chars).
# Currently In Progress:
'''

tableheader='''
| Language | Bytes | Rank (in bytes)
|:---:|:---:|:---:|
'''

usagenotes='''
# Usage Notes
Use requirements.txt to check for any changes for this file.<br>
Use the command `git config core.hooksPath hooks` to assign `hooks\pre-commit` as a hook of this repository (otherwise this README will break!)<br>
'''

def drawGraph(tdata,t):
    #Draw bar graph with specific color codes
    plt.style.use('dark_background')

    plt.bar(tdata.keys(),tdata.values())
    ax=plt.axes()
    ax.set_xlabel("Language")
    ax.set_ylabel("Char count")
    plt.title(t)
    plt.setp(ax.get_xticklabels(),rotation=45,ha='right')
    plt.tight_layout()

    plt.savefig(f"charts/{t.replace(' ','_',-1)}.png",bbox_inches='tight',transparent=True)        #Save as a recognizable name for embedding

def getRank(test,lang):
    pg=1
    rank=[]

    #Replace whitespace and capitals in test name
    test = re.sub(r' ','-',test.lower())

    #Replace special chars in lang name
    lang = re.sub(r'\+','p',lang.lower())
    lang = re.sub(r'\#','-sharp',lang)
    lang = re.sub(r'><>','fish',lang)

    #Loop through all rank pages
    while(pg<11):
        try:
            page = urlopen(f'https://code.golf/rankings/holes/{test}/{lang}/bytes?page={pg}')
        except urllib.error.HTTPError:
            break

        html = page.read().decode('utf-8')

        rank=re.findall(r'<td>([0-9]+)<sup>.*</sup>\n +<td>\n +<a href=\"/golfers/SubsTheTechnomancer',html)

        if(len(rank)==1):
            break

        pg+=1

    if(rank==[]):
        return 'NA'
    else:
        return rank[0]

tests=[test for test in os.listdir('.') if os.path.isdir(test)]
tests.remove('.git')
tests.remove('hooks')
tests.remove('charts')
if('.elixir_ls' in tests):
    tests.remove('.elixir_ls')

readme = open('README.md','w')
readme.write(inittext)

for t in tests:
    tdata={}                                                            #Dictionary to store language data
    readme.write('## '+t)
    readme.write(tableheader)
    for lang in os.listdir(t):
        b=''
        files=os.listdir(t+'/'+lang)
        if len(files)==1:
            f=open(t+'/'+lang+'/'+files[0],'r')
            b=len(f.read())                                             #Get number of chars in each language
            f.close()
        
        readme.write('|'+lang+'|'+str(b)+'|'+getRank(t,lang)+'|\n')     #Add it to the markdown table
        tdata[lang]=b                                                   #..And to the dictionary

    readme.write('\n\n')
    drawGraph(tdata,t)                                                  #Draww the bar graph with matplotlib
    readme.write(f"![{t}](charts/{t.replace(' ','_',-1)}.png)\n\n")

readme.write(usagenotes)
readme.close()

#Add the readme changes to the current commit because Git is drunk as hell and doesn't auto-add during hooks
repo = Repo('.').git
repo.add(all=True)
